{"version":3,"sources":["script.js"],"names":["weather","apiKey","city","_this","this","fetch","fetchWeather","then","response","Error","alert","data","displayWeather","_data$weather$","icon","description","_data$main","main","temp","humidity","wind","log","name","speed","innerText","document","querySelector","src","console","classList","remove","value","addEventListener","search","event","key"],"mappings":"aAAA,IAAIA,QAAU,CAAVA,OAAO,mCAEPC,aAAQ,SAAAC,GAAA,IAAAC,EAAAC,KACRC,MACAC,qDAA8BJ,EAIxB,uBAFFE,KAAAH,QAOAM,KAAKC,SAAAA,GAEH,IAAAA,EAAUC,GAAV,MAEFC,MAAA,qBAFQ,IAAID,MAAM,qBAKnBF,OAAKC,EAACG,SAfPJ,KAAA,SAAAI,GAAA,OAAAR,EAAAS,eAAAD,MAkBFC,eAAgB,SAAAD,GAAA,IAEKA,EAFUA,EAEVA,KAFLE,EAGiBF,EAHFX,QAAA,GAAAc,EAAfD,EAAeC,KAAAC,EAAfF,EAAeE,YAAfC,EAAeL,EAAAM,KAAAC,EAAfF,EAAeE,KAAAC,EAAfH,EAAeG,SAGdJ,EAHcJ,EAAAS,KAGdL,MACLG,QAJmBG,IAAAC,EAAAR,EAAAC,EAAAG,EAAAC,EAAAI,GAKnBA,SAAUZ,cALS,SAM3Ba,UAAA,cAAAF,EAIAG,SAASC,cAAc,SAASC,IAAM,mCAAqCb,EAAO,OAHlFc,SAAYN,cAAUP,gBAAiBI,UAASI,EAKhDE,SAASC,cAAc,SAASF,UAAYN,EAAO,KAHnDO,SAASC,cAAc,aAASF,UAAY,aAA5CL,EAAA,IACAM,SAASC,cAAc,SAAvBF,UAAsC,eAAAD,EAAA,QACtCE,SAASC,cAAc,WAAvBG,UAAAC,OAAmDf,YAGnDU,OAAQ,WACRA,KAASC,aAAcD,SAAvBC,cAA4CI,eAA5CC,SAKHN,SAAAC,cAAA,kBAAAM,iBAAA,QAAA,WAGLhC,QAAAiC,WAGCR,SAEDC,cAAA,eAAAM,iBAAA,QAAA,SAAAE,GAEqB,SAAbA,EAAMC,KADNnC,QAAC0B,WAOT1B,QAAQM,aAAa","file":"script.min.js","sourcesContent":["let weather = {\r\n    // Property that holds the API key for OpenWeatherMap\r\n    apiKey: \"c235b39beb859eeb30e3774b3a867a45\",\r\n    // Method that makes a fetch request to the OpenWeatherMap API to get weather data for a specific city\r\n    fetchWeather: function (city) {\r\n      fetch(\r\n        \"https://api.openweathermap.org/data/2.5/weather?q=\" +\r\n          city +\r\n          \"&units=metric&appid=\" +\r\n          this.apiKey\r\n      )\r\n      .then((response) => {\r\n        // Check if the response was successful\r\n        if (!response.ok) {\r\n          alert(\"No weather found.\");\r\n          throw new Error(\"No weather found.\");\r\n        }\r\n        // If successful, parse the response as JSON\r\n        return response.json();\r\n      })\r\n      .then((data) => this.displayWeather(data));\r\n    },\r\n    // Method that takes the weather data and displays it on the page\r\n    displayWeather: function(data) {\r\n        // Destructure the data to get the values we need\r\n        const { name } = data;\r\n        const {icon, description } = data.weather[0];\r\n        const { temp, humidity } =  data.main;\r\n        const { speed } = data.wind;\r\n        // Log the data to the console\r\n        console.log(name,icon,description,temp,humidity,speed)\r\n        // Update the HTML elements on the page with the weather data\r\n        document.querySelector(\".city\").innerText = \"Weather in \" + name;\r\n        document.querySelector(\".icon\").src = \"https:openweathermap.org/img/wn/\" + icon + \".png\";\r\n        document.querySelector(\".description\").innerText = description;\r\n        document.querySelector(\".temp\").innerText = temp + \"Â°C\";\r\n        document.querySelector(\".humidity\").innerText = \"Humidity: \" + humidity + \"%\";\r\n        document.querySelector(\".wind\").innerText = \"Wind speed: \" + speed + \"km/hr\";\r\n        document.querySelector(\"weather\").classList.remove(\"loading\");\r\n    },\r\n    // Method that get the city from the search bar and call fetchWeather method\r\n    search: function (){\r\n        this.fetchWeather (document.querySelector(\".search-bar\").value);\r\n    }\r\n};\r\n\r\n// Add a click event listener to the search button that calls the search method\r\ndocument.querySelector(\".search button\").addEventListener(\"click\", function () {\r\n    weather.search();\r\n});\r\n\r\n// Add a keyup event listener to the search bar that calls the search method when the enter key is pressed\r\ndocument.querySelector(\".search-bar\").addEventListener(\"keyup\", function (event){\r\n    if (event.key == \"Enter\") {\r\n        weather.search();\r\n    }\r\n});\r\n\r\n// Fetch the weather for Minneapolis by default\r\nweather.fetchWeather(\"Minneapolis\");\r\n"]}